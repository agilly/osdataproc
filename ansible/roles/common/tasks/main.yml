---

- name: Gather facts after connection
  setup:

- name: Wait for cloud-init to finish
  wait_for:
          path: /var/lib/cloud/instance/boot-finished
          state: present
          timeout: 3600
  tags: master

- name: Update apt cache
  apt: update_cache=yes

- name: Create nfs shared data directory
  file:
          state: directory
          path: "{{ home }}/data"
          owner: "{{ user }}"
          group: "{{ group }}"

- name: Include IP addresses
  include_vars:
          file: "../../../terraform/terraform.tfstate.d/{{ lookup('env', 'TF_VAR_cluster_name') }}/outputs.json"
          name: ip_addresses
  tags: master

- name: Write hosts file
  become: yes
  template: src=hosts.j2 dest=/etc/hosts
  tags: master

- name: Wait for automatic system updates
  become: true
  shell: while sudo fuser /var/lib/dpkg/{{ item }} >/dev/null 2>&1; do sleep 5; done;
  loop:
    - lock
    - lock-frontend

- name: Install python packages
  become: yes
  apt:
          name: "{{ python_pkgs }}"
          state: latest

- name: Install Java 8 packages
  become: yes
  apt:
          name: "{{ java_pkgs }}"
          state: latest

- name: Install scala
  become: yes
  apt:
          name: scala
          state: latest

- name: Install nfs packages
  become: yes
  apt:
          name: "{{ nfs_pkgs }}"
          state: latest

- name: Install nginx packages
  become: yes
  apt:
          name: "{{ nginx_pkgs }}"
          state: latest

- name: Download nginx sources
  get_url:
    url: "{{ nginx_tarball_url }}"
    dest: "/tmp/{{ nginx_version }}.tar.gz"
  register: nginx_source

- name: Unpack nginx
  unarchive:
    copy: no
    dest: /tmp/
    src: "{{ nginx_source.dest }}"
  when: nginx_source.changed
  register: nginx_source_unpack

- name: Create required Nginx dirs
  become: yes
  file:
          path: "{{ item }}"
          state: directory
          owner: root
          group: root
          mode: 0755
  loop:
          - "{{ nginx_prefix }}"

- name: Install nginx http_substitutions_filter_module
  git:
          repo: https://github.com/yaoweibin/ngx_http_substitutions_filter_module.git
          dest: "{{ subs_filter_path }}"
          version: master

- name: Configuring nginx source with custom modules
  become: yes
  command: "./configure --prefix={{ nginx_prefix }} {{ nginx_custom_modules }} --add-module={{ subs_filter_path }}"
  args:
          chdir: "{{ nginx_install_dir }}"
  when: nginx_source_unpack.changed
  register: nginx_configure

- name: Installing nginx
  become: yes
  shell: make && make install
  args:
          chdir: "{{ nginx_install_dir }}"
  when: nginx_configure.changed

- name: Create nginx service file
  become: yes
  template: src=nginx.service.j2 dest=/etc/systemd/system/nginx.service

- name: Install Netdata packages
  become: yes
  apt:
          name: "{{ netdata_pkgs }}"
          state: latest

- name: Download Netdata repo
  git:
          repo: https://github.com/netdata/netdata.git
          dest: "{{ netdata_dir }}"
          version: master
          depth: 100

- name: Add data directory to /etc/exports
  become: yes
  lineinfile:
          path: /etc/exports
          line: "{{ home }}/data *(rw,sync,no_root_squash,no_subtree_check)"
  tags: master

- name: Start nginx
  service: name=nginx state=started enabled=yes
  tags: master

- name: Restart nfs-kernel-server
  service: name=nfs-kernel-server state=restarted enabled=yes
  tags: master
