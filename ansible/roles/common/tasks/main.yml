---

- name: Gather facts after connection
  setup:

- name: Update apt cache
  apt: update_cache=yes

  # If unattended upgrades are running apt will fail, so wait
  # (slaves wait for cloud-init before ansible starts)
- name: Wait for lock
  become: yes
  shell:  while sudo fuser /var/lib/dpkg/lock && sudo fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1; do sleep 5; done;
  tags: master

- name: Install OpenJDK Java 8
  become: yes
  apt:
          pkg:    
                - software-properties-common
                - ca-certificates
                - openjdk-8-jre-headless
                - openjdk-8-jdk-headless

- name: Install venv
  become: yes
  apt:
          name: python3-venv
          state: latest

- name: Install scala
  become: yes
  apt:
          name: scala
          state: latest

- name: Install nfs packages
  become: yes
  apt:
          pkg:
                - nfs-kernel-server
                - nfs-common

- name: Install nginx
  become: yes
  apt:
          pkg: 
                - nginx
                - python3-passlib
          state: latest

- name: Create nfs shared data directory
  file:
          state: directory
          path: "{{ home }}/data"
          owner: "{{ user }}"
          group: "{{ group }}"

- name: Add data directory to /etc/exports
  become: yes
  lineinfile:
          path: /etc/exports
          line: "{{ home }}/data *(rw,sync,no_root_squash,no_subtree_check)"
  tags: master

- name: Restart nfs-kernel-server
  service:
          name: nfs-kernel-server
          state: restarted
          enabled: yes
  tags: master

- name: Install Netdata packages
  become: yes
  apt:
          name: "{{ netdata_pkgs }}"
          state: latest

- name: Download Netdata repo
  git:
          repo: https://github.com/netdata/netdata.git
          dest: "{{ netdata_dir }}"
          version: master
          depth: 100

- name: Include IP addresses
  include_vars:
          file: "../../../terraform/terraform.tfstate.d/{{ lookup('env', 'TF_VAR_cluster_name') }}/outputs.json"
          name: ip_addresses
  tags: master

- name: Copy hosts file
  become: yes
  template:
          src: hosts.j2
          dest: /etc/hosts
  tags: master

- name: Create virtualenv
  become: yes
  become_user: "{{ user }}"
  command: "python3 -m venv {{ venv_dir }}" 
