---

- name: Ensure Hadoop directories exist
  file:
          state: directory
          path: "{{ item }}"
          mode: 0755
          owner: "{{ hadoop_user }}"
          group: "{{ hadoop_group }}"
  with_items:
          - "{{ hadoop_install_dir }}"
          - "{{ hadoop_logs_dir }}"
          - "{{ hdfs_home }}"
          - "{{ hdfs_namenode_dir }}"
          - "{{ hdfs_datanode_dir }}"
          - "{{ yarn_home }}"
          - "{{ yarn_logs_dir }}"

- name: Download Hadoop distribution
  become: yes
  get_url:
          url: "{{ hadoop_mirror }}/hadoop-{{ hadoop_version }}/hadoop-{{ hadoop_version }}.tar.gz"
          dest: "/tmp/hadoop-{{ hadoop_version }}.tar.gz"
          timeout: 60

- name: Extract Hadoop distribution
  become: yes
  unarchive:
          src: "/tmp/hadoop-{{ hadoop_version }}.tar.gz"
          dest: "{{ hadoop_install_dir }}"
          owner: "{{ hadoop_user }}"
          group: "{{ hadoop_group }}"
          extra_opts: [--strip-components=1]
          remote_src: yes

- name: Copy Hadoop configuration files
  become: yes
  template:
          src: "{{ item }}"
          dest: "{{ hadoop_home }}/etc/hadoop/{{ item | basename | regex_replace('.j2','') }}"
          owner: "{{ hadoop_user }}"
          group: "{{ hadoop_group }}"
  with_fileglob:
          - ../templates/*.j2

- name: Create Hadoop systemd service files
  become: yes
  template:
          src: "{{ item }}"
          dest: "/etc/systemd/system/{{ item | basename | regex_replace('.j2','') }}"
          owner: root
          group: root
  with_fileglob:
          - ../templates/systemd/*.j2 

- name: Ensure netdata HDFS directory exists
  file:
          state: directory
          path: /etc/netdata/go.d/
          owner: root
          group: root

- name: Create netdata HDFS.conf file
  template: src=netdata/hdfs.conf.j2 dest=/etc/netdata/go.d/hdfs.conf
  tags: master

- name: Create netdata stream.conf file
  template: src=netdata/stream.conf.j2 dest=/etc/netdata/stream.conf
