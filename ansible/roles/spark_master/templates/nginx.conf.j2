
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
      listen 443 ssl;
      server_name {{ spark_master_public_ip }} spark-master ;
      client_max_body_size 0;
    
      ssl_certificate     {{ ssl_crt_path }};
      ssl_certificate_key {{ ssl_privatekey_path }};
    
      location /jupyter {
          proxy_pass http://localhost:8888;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header Host $http_host;
          proxy_http_version 1.1;
          proxy_redirect off;
          proxy_buffering off;
          proxy_set_header Upgrade "websocket";
          proxy_set_header Connection "upgrade";
          proxy_read_timeout 86400;
      }
    
      location / {
          return 301 http://$server_name$request_uri;
      }
    }
    
    server {
      
      server_name {{ spark_master_public_ip }} spark-master ;  
      client_max_body_size 0;
    
      auth_basic           "Enter your OpenStack username and configured password";
      auth_basic_user_file /etc/nginx/passwdfile;
    
      location / {
          rewrite ^/$ https://{{ spark_master_public_ip }}/jupyter/ redirect;
      }

      location /jupyter {
          rewrite ^/jupyter$ https://{{ spark_master_public_ip }}/jupyter/ redirect;
      }
    
      location = /netdata {
          auth_basic off;
          return 301 /netdata/;
      }
    
      location ~ /netdata/(?<ndpath>.*) {
          auth_basic off;
          rewrite /netdata/(?<ndpath>.*) /$1 break;
          proxy_pass http://localhost:19999;
          proxy_redirect http://localhost:19999/ http://{{ spark_master_public_ip }}/netdata/;
    
          proxy_set_header X-Forwarded-Host $host;
          proxy_set_header X-Forwarded-Server $host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_http_version 1.1;
          proxy_pass_request_headers on;
          proxy_set_header Connection "keep-alive";
          proxy_store off;
          
          gzip on;
          gzip_proxied any;
          gzip_types *;
      }
    
      location /spark/ {
          proxy_pass http://localhost:8080/;
          proxy_set_header Accept-Encoding "";
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_redirect http://{{ spark_master_public_ip }}/proxy/ http://{{ spark_master_public_ip }}/spark/proxy/;
    
          sub_filter_types "*";
          sub_filter_once off;
          sub_filter       'src="/'     'src="/spark/';
          sub_filter       'href="/'    'href="/spark/';
          sub_filter       'src="app'   'src="/spark/app/';
          sub_filter       'href="app'  'href="/spark/app/';
      }
    
      location = /sparkhist {
          return 301 /sparkhist/;
      }
    
      location ~ ^/sparkhist/(.*)?$ {
          rewrite ^/sparkhist(.*)$ $1 break;
          proxy_pass http://{{ spark_master_private_ip }}:18080$uri$is_args$args;
          proxy_set_header Accept-Encoding "";
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    
          sub_filter_types "*";
          sub_filter_once off;
          sub_filter       'src="/'        'src="/sparkhist/';
          sub_filter       'href="/'       'href="/sparkhist/';
      }
    
      location ~ ^/api/(.*)$ {
          rewrite ^/sparkhist/api(.*)$ $1 break;
          proxy_pass http://{{ spark_master_private_ip }}:18080;
      }
    
      location ~ ^/static/(.*)$ {
          rewrite ^/sparkhist/static(.*)$ $1 break;
          proxy_pass http://{{ spark_master_private_ip }}:18080;
      }
    
      location ~ ^/history/(.*)$ {
          rewrite ^/sparkhist/history(.*)$ $1 break;
          proxy_pass http://{{ spark_master_private_ip }}:18080;
      }
    
      # Inspired by https://github.com/dsaidgovsg/yarn-reverse-proxy
    
      location ~ ^/yarn$ {
          return 301 http://{{ spark_master_public_ip }}/yarn/;
      }
    
      location ~ ^/yarn/static/(.*)\.min\.js$ {
          set $target {{ spark_master_private_ip }};
          rewrite ^/yarn(.*)$ $1 break;
    
          proxy_pass http://$target:8088$uri$is_args$args;
      }
    
      location ~ ^/yarn/(.*)?$ {
          set $target {{ spark_master_private_ip }};
          rewrite ^/yarn(.*)$ $1 break;
    
          proxy_pass http://$target:8088$uri$is_args$args;
          proxy_set_header Accept-Encoding '';
    
          sub_filter 'src="//{{ spark_master_private_ip }}:8088' 'src="http://{{ spark_master_public_ip }}/yarn';
          sub_filter 'href="//{{ spark_master_private_ip }}:8088' 'href="http://{{ spark_master_public_ip }}/yarn';
          sub_filter 'href=\'//{{ spark_master_private_ip }}:8088' 'href=\'http://{{ spark_master_public_ip }}/yarn';
          sub_filter 'http://{{ spark_master_private_ip }}:8088/' 'http://{{ spark_master_public_ip }}/yarn/';
          sub_filter 'http://{{ spark_master_private_ip }}:8088' 'http://{{ spark_master_public_ip }}/yarn';
          proxy_redirect http://{{ spark_master_private_ip }}:8088/ http://{{ spark_master_public_ip }}/yarn/;
    
          sub_filter 'src="//spark-master:8088' 'src="http://{{ spark_master_public_ip }}/yarn';
          sub_filter 'href="//spark-master:8088' 'href="http://{{ spark_master_public_ip }}/yarn';
          sub_filter 'href=\'//spark-master:8088' 'href=\'http://{{ spark_master_public_ip }}/yarn';
          sub_filter 'http://spark-master:8088/' 'http://{{ spark_master_public_ip }}/yarn/';
          sub_filter 'http://spark-master:8088' 'http://{{ spark_master_public_ip }}/yarn';
          proxy_redirect http://spark-master:8088/ http://{{ spark_master_public_ip }}/yarn/;
    
          sub_filter 'src="//spark-master:19888' 'src="http://{{ spark_master_public_ip }}/mapreduce';
          sub_filter 'href="//spark-master:19888' 'href="http://{{ spark_master_public_ip }}/mapreduce';
          sub_filter 'href=\'//spark-master:19888' 'href=\'http://{{ spark_master_public_ip }}/mapreduce';
          sub_filter 'http://spark-master:19888/' 'http://{{ spark_master_public_ip }}/mapreduce/';
          sub_filter 'http://spark-master:19888' 'http://{{ spark_master_public_ip }}/mapreduce';
          proxy_redirect http://spark-master:19888/ http://{{ spark_master_public_ip }}/mapreduce/;
    
    
          subs_filter 'src="//{{ lookup('env', 'TF_VAR_os_user_name') }}-{{ lookup('env', 'TF_VAR_cluster_name') }}-slave-(\d*):8042' 'src="http://{{ spark_master_public_ip }}/nm$1' ir;
          subs_filter 'href="//{{ lookup('env', 'TF_VAR_os_user_name') }}-{{ lookup('env', 'TF_VAR_cluster_name') }}-slave-(\d*):8042' 'href="http://{{ spark_master_public_ip }}/nm$1' ir;
          subs_filter 'href=\'//{{ lookup('env', 'TF_VAR_os_user_name') }}-{{ lookup('env', 'TF_VAR_cluster_name') }}-slave-(\d*):8042' 'href=\'http://{{ spark_master_public_ip }}/nm$1' ir;
          subs_filter 'http://{{ lookup('env', 'TF_VAR_os_user_name') }}-{{ lookup('env', 'TF_VAR_cluster_name') }}-slave-(\d*):8042/' 'http://{{ spark_master_public_ip }}/nm$1/' ir;
          subs_filter 'http://{{ lookup('env', 'TF_VAR_os_user_name') }}-{{ lookup('env', 'TF_VAR_cluster_name') }}-slave-(\d*):8042' 'http://{{ spark_master_public_ip }}/nm$1' ir;
    
          {% for ip in spark_slave_private_ips %}
          proxy_redirect http://{{ lookup('env', 'TF_VAR_os_user_name') }}-{{ lookup('env', 'TF_VAR_cluster_name') }}-slave-{{ "%02d"|format(loop.index) }}:8042/ http://{{ spark_master_public_ip }}/nm{{ "%02d"|format(loop.index) }}/;
          {% endfor %}
    
          sub_filter 'src="/' 'src="http://{{ spark_master_public_ip }}/yarn/';
          sub_filter 'href="/' 'href="http://{{ spark_master_public_ip }}/yarn/';
          sub_filter 'href=\'/' 'href=\'http://{{ spark_master_public_ip }}/yarn/';
    
          sub_filter_once off;
      }
    
      location ~ ^/mapreduce$ {
          return 301 http://{{ spark_master_public_ip }}/mapreduce/;
      }
    
      location ~ ^/mapreduce/static/(.*)\.min\.js$ {
          set $target {{ spark_master_private_ip }};
          rewrite ^/mapreduce(.*)$ $1 break;
    
          proxy_pass http://$target:19888$uri$is_args$args;
      }
    
      location ~ ^/mapreduce/(.*)?$ {
          set $target {{ spark_master_private_ip }};
          rewrite ^/mapreduce(.*)$ $1 break;
    
          proxy_pass http://$target:19888$uri$is_args$args;
          proxy_set_header Accept-Encoding '';
    
          sub_filter 'src="//{{ spark_master_private_ip }}:19888' 'src="http://{{ spark_master_public_ip }}/mapreduce';
          sub_filter 'href="//{{ spark_master_private_ip }}:19888' 'href="http://{{ spark_master_public_ip }}/mapreduce';
          sub_filter 'href=\'//{{ spark_master_private_ip }}:19888' 'href=\'http://{{ spark_master_public_ip }}/mapreduce';
          sub_filter 'http://{{ spark_master_private_ip }}:19888/' 'http://{{ spark_master_public_ip }}/mapreduce/';
          sub_filter 'http://{{ spark_master_private_ip }}:19888' 'http://{{ spark_master_public_ip }}/mapreduce';
          proxy_redirect http://{{ spark_master_private_ip }}:19888/ http://{{ spark_master_public_ip }}/mapreduce/;
    
          sub_filter 'src="//spark-master:19888' 'src="http://{{ spark_master_public_ip }}/mapreduce';
          sub_filter 'href="//spark-master:19888' 'href="http://{{ spark_master_public_ip }}/mapreduce';
          sub_filter 'href=\'//spark-master:19888' 'href=\'http://{{ spark_master_public_ip }}/mapreduce';
          sub_filter 'http://spark-master:19888/' 'http://{{ spark_master_public_ip }}/mapreduce/';
          sub_filter 'http://spark-master:19888' 'http://{{ spark_master_public_ip }}/mapreduce';
          proxy_redirect http://spark-master:19888/ http://{{ spark_master_public_ip }}/mapreduce/;
    
          subs_filter 'src="//{{ lookup('env', 'TF_VAR_os_user_name') }}-{{ lookup('env', 'TF_VAR_cluster_name') }}-slave-(\d*):8042' 'src="http://{{ spark_master_public_ip }}/nm$1' ir;
          subs_filter 'href="//{{ lookup('env', 'TF_VAR_os_user_name') }}-{{ lookup('env', 'TF_VAR_cluster_name') }}-slave-(\d*):8042' 'href="http://{{ spark_master_public_ip }}/nm$1' ir;
          subs_filter 'href=\'//{{ lookup('env', 'TF_VAR_os_user_name') }}-{{ lookup('env', 'TF_VAR_cluster_name') }}-slave-(\d*):8042' 'href=\'http://{{ spark_master_public_ip }}/nm$1' ir;
          subs_filter 'http://{{ lookup('env', 'TF_VAR_os_user_name') }}-{{ lookup('env', 'TF_VAR_cluster_name') }}-slave-(\d*):8042/' 'http://{{ spark_master_public_ip }}/nm$1/' ir;
          subs_filter 'http://{{ lookup('env', 'TF_VAR_os_user_name') }}-{{ lookup('env', 'TF_VAR_cluster_name') }}-slave-(\d*):8042' 'http://{{ spark_master_public_ip }}/nm$1' ir;
    
          {% for ip in spark_slave_private_ips %}
          proxy_redirect http://{{ lookup('env', 'TF_VAR_os_user_name') }}-{{ lookup('env', 'TF_VAR_cluster_name') }}-slave-{{ "%02d"|format(loop.index) }}:8042/ http://{{ spark_master_public_ip }}/nm{{ "%02d"|format(loop.index) }}/;
          {% endfor %}
    
          sub_filter 'src="/' 'src="http://{{ spark_master_public_ip }}/mapreduce/';
          sub_filter 'href="/' 'href="http://{{ spark_master_public_ip }}/mapreduce/';
          sub_filter 'href=\'/' 'href=\'http://{{ spark_master_public_ip }}/mapreduce/';
    
          sub_filter_once off;
      }
      
      {% for ip in spark_slave_private_ips %}
      
      location ~ ^/nm{{ "%02d"|format(loop.index) }}$ {
          return 301 http://{{ spark_master_public_ip }}/nm{{ "%02d"|format(loop.index) }}/;
      }
    
      location ~ ^/nm{{ "%02d"|format(loop.index) }}/static/(.*)\.min\.js$ {
          set $target {{ ip }};
          rewrite ^/nm{{ "%02d"|format(loop.index) }}(.*)$ $1 break;
    
          proxy_pass http://$target:8042$uri$is_args$args;
      }
    
      location ~ ^/nm{{ "%02d"|format(loop.index) }}/(.*)?$ {
          set $target {{ ip }};
          rewrite ^/nm{{ "%02d"|format(loop.index) }}(.*)$ $1 break;
    
          proxy_pass http://$target:8042$uri$is_args$args;
          proxy_set_header Accept-Encoding '';
    
          sub_filter 'src="//spark-master:8088' 'src="http://{{ spark_master_public_ip }}/yarn';
          sub_filter 'href="//spark-master:8088' 'href="http://{{ spark_master_public_ip }}/yarn';
          sub_filter 'href=\'//spark-master:8088' 'href=\'http://{{ spark_master_public_ip }}/yarn';
          sub_filter 'http://spark-master:8088/' 'http://{{ spark_master_public_ip }}/yarn/';
          sub_filter 'http://spark-master:8088' 'http://{{ spark_master_public_ip }}/yarn';
          proxy_redirect http://spark-master:8088/ http://{{ spark_master_public_ip }}/yarn/;
    
          sub_filter 'src="//{{ lookup('env', 'TF_VAR_os_user_name') }}-{{ lookup('env', 'TF_VAR_cluster_name') }}-slave-{{ "%02d"|format(loop.index) }}:8042' 'src="http://{{ spark_master_public_ip }}/nm{{ "%02d"|format(loop.index) }}';
          sub_filter 'href="//{{ lookup('env', 'TF_VAR_os_user_name') }}-{{ lookup('env', 'TF_VAR_cluster_name') }}-slave-{{ "%02d"|format(loop.index) }}:8042' 'href="http://{{ spark_master_public_ip }}/nm{{ "%02d"|format(loop.index) }}';
          sub_filter 'href=\'//{{ lookup('env', 'TF_VAR_os_user_name') }}-{{ lookup('env', 'TF_VAR_cluster_name') }}-slave-{{ "%02d"|format(loop.index) }}:8042' 'href=\'http://{{ spark_master_public_ip }}/nm{{ "%02d"|format(loop.index) }}';
          sub_filter 'http://{{ lookup('env', 'TF_VAR_os_user_name') }}-{{ lookup('env', 'TF_VAR_cluster_name') }}-slave-{{ "%02d"|format(loop.index) }}:8042/' 'http://{{ spark_master_public_ip }}/nm{{ "%02d"|format(loop.index) }}/';
          sub_filter 'http://{{ lookup('env', 'TF_VAR_os_user_name') }}-{{ lookup('env', 'TF_VAR_cluster_name') }}-slave-{{ "%02d"|format(loop.index) }}:8042' 'http://{{ spark_master_public_ip }}/nm{{ "%02d"|format(loop.index) }}';
          proxy_redirect http://{{ lookup('env', 'TF_VAR_os_user_name') }}-{{ lookup('env', 'TF_VAR_cluster_name') }}-slave-{{ "%02d"|format(loop.index) }}:8042/ http://{{ spark_master_public_ip }}/nm{{ "%02d"|format(loop.index) }}/;
    
          sub_filter 'src="//{{ ip }}:8042' 'src="http://{{ spark_master_public_ip }}/nm{{ "%02d"|format(loop.index) }}';
          sub_filter 'href="//{{ ip }}:8042' 'href="http://{{ spark_master_public_ip }}/nm{{ "%02d"|format(loop.index) }}';
          sub_filter 'href=\'//{{ ip }}:8042' 'href=\'http://{{ spark_master_public_ip }}/nm{{ "%02d"|format(loop.index) }}';
          sub_filter 'http://{{ ip }}:8042/' 'http://{{ spark_master_public_ip }}/nm{{ "%02d"|format(loop.index) }}/';
          sub_filter 'http://{{ ip }}:8042' 'http://{{ spark_master_public_ip }}/nm{{ "%02d"|format(loop.index) }}';
          proxy_redirect http://{{ ip }}:8042/ http://{{ spark_master_public_ip }}/nm{{ "%02d"|format(loop.index) }}/;
    
         
          sub_filter 'src="/' 'src="http://{{ spark_master_public_ip }}/nm{{ "%02d"|format(loop.index) }}/';
          sub_filter 'href="/' 'href="http://{{ spark_master_public_ip }}/nm{{ "%02d"|format(loop.index) }}/';
          sub_filter 'href=\'/' 'href=\'http://{{ spark_master_public_ip }}/nm{{ "%02d"|format(loop.index) }}/';
    
          sub_filter_once off;
      }
    
      {% endfor %}
      
      location ~ ^/hdfs$ {
          return 301 http://{{ spark_master_public_ip }}/hdfs/;
      }
    
      location ~ ^/hdfs/static/(.*)\.min\.js$ {
          set $target {{ spark_master_private_ip }};
          rewrite ^/hdfs(.*)$ $1 break;
    
          proxy_pass http://$target:9870$uri$is_args$args;
      }
    
      location ~ ^/hdfs/(.*)?$ {
          set $target {{ spark_master_private_ip }};
          rewrite ^/hdfs(.*)$ $1 break;
    
          proxy_pass http://$target:9870$uri$is_args$args;
          proxy_set_header Accept-Encoding '';
    
          sub_filter 'src="/' 'src="http://{{ spark_master_public_ip }}/hdfs/';
          sub_filter 'href="/' 'href="http://{{ spark_master_public_ip }}/hdfs/';
    
          sub_filter_once off;
      }
    
      location /jmx {
          proxy_pass http://localhost:9870/jmx;
          proxy_set_header Accept-Encoding "";
          proxy_pass_request_headers on;
          proxy_set_header Connection "keep-alive";
      }
    
      location /webhdfs/ {
          proxy_pass http://localhost:9870/webhdfs/;
          proxy_set_header Accept-Encoding "";
          proxy_pass_request_headers on;
          proxy_set_header Connection "keep-alive";
      }
    
      location /startupProgress {
          proxy_pass http://localhost:9870/startupProgress;
          proxy_set_header Accept-Encoding "";
          proxy_pass_request_headers on;
          proxy_set_header Connection "keep-alive";
      }
    
      location /conf {
          proxy_pass http://localhost:9870/conf;
          proxy_set_header Accept-Encoding "";
          proxy_pass_request_headers on;
          proxy_set_header Connection "keep-alive";
      }
    
    }
}
